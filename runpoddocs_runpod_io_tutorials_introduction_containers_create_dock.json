{
    "content": "Introduction\nContainers\nDocker\ufb01le\nOn this page\nDocker\ufb01le\nIn the previous step, you ran a command that prints the container's uptime. Now you'll create a\nDocker\ufb01le to customize the contents of your own Docker image.\nCreate a Docker\ufb01le\nCreate a new \ufb01le called Dockerfile  and add the following items.\nThis Docker\ufb01le starts from the busybox  image like we used before. It then adds a custom\nentrypoint.sh  script, makes it executable, and con\ufb01gures it as the entrypoint.\nThe entrypoint script\nNow let's create entrypoint.sh  with the following contents:\nNOTE\nWhile we named this script entrypoint.sh  you will see a variety of naming conventions;\nsuch as:\nstart.sh\nCMD.sh\nentry_path.sh\nFROM busybox\nCOPY entrypoint.sh /\nRUN chmod +x /entrypoint.sh\nENTRYPOINT [\"/entrypoint.sh\"]\n#!/bin/sh\necho \"The time is: $(date)\"\nAsk AI\nAsk AI\nRunPod\nThese \ufb01les are normally placed in a folder called script  but it is dependent on the\nmaintainers of that repository.\nThis is a simple script that will print the current time when the container starts.\nWhy an entrypoint script:\nIt lets you customize what command gets run when a container starts from your image.\nFor example, our script runs date to print the time.\nWithout it, containers would exit immediately after starting.\nEntrypoints make images executable and easier to reuse.\nBuild the image\nWith those \ufb01les created, we can now build a Docker image using our Docker\ufb01le:\nThis will build the image named my-time-image  from the Docker\ufb01le in the current directory.\nWhy build a custom image:\nLets you package up custom dependencies and con\ufb01gurations.\nFor example you can install extra software needed for your app.\nMakes deploying applications more reliable and portable.\nInstead of installing things manually on every server, just use your image.\nCustom images can be shared and reused easily across environments.\nBuilding images puts your application into a standardized unit that \"runs anywhere\".\nYou can version images over time as you update con\ufb01gurations.\nRun the image\nFinally, let's run a container from our new image:\ndocker image build -t my-time-image .\ndocker run my-time-image\nAsk AI\nAsk AI\nWe should see the same output as before printing the current time!\nEntrypoints and Docker\ufb01les let you de\ufb01ne reusable, executable containers that run the software\nand commands you need. This makes deploying and sharing applications much easier without\nper-server con\ufb01guration.\nBy putting commands like this into a Docker\ufb01le, you can easily build reusable and shareable\nimages.\nEdit this page\nPrevious\n\u00ab Containers overview\nNext\nPersist data outside of containers \u00bb\nDocs\nOverview\nTutorials\nAI APIs\nCommunity\nDiscord\nContact us\nMore\nBlog\nGitHub\nCopyright \u00a9 2024 RunPod\nAsk AI\nAsk AI\n"
}