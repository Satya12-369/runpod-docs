{
    "content": "Migrations\nBanana\nOverview\nOn this page\nOverview\nTo get started with RunPod:\nCreate a RunPod account\nAdd funds\nUse the RunPod SDK to build and connect with your Serverless Endpoints\nThe rest of this guide will help you set up a RunPod project.\nSetting up your project\nJust like with Banana, RunPod provides a Python SDK to run your projects.\nTo get started, install setup a virtual environment then install the SDK library.\nmacOS\nWindows\nCreate a Python virtual environment with venv:\nTo install the SDK, run the following command from the terminal.\nQuick migration with Docker\npython3 -m venv env\nsource env/bin/activate\npython -m pip install runpod\nAsk AI\nAsk AI\nRunPod\nProject examples\nRunPod provides a repository of templates for your project.\nYou can use the template to get started with your project.\nNow that you've got a basic RunPod Worker template created:\nContinue reading to see how you'd migrate from Banana to RunPod\nSee Generate SDXL Turbo for a general approach on deploying your \ufb01rst Serverless\nEndpoint with RunPod.\nProject structure\nWhen beginning to migrate your Banana monorepo to RunPod, you will need to understand the\nstructure of your project.\nBanana\nRunPod\nBanana is a monorepo that contains multiple services. The basic structure for Banana projects\nis aligned with the RunPod Serverless projects for consistency:\nBoth project setups at a minimum contain:\nDockerfile : De\ufb01nes the container for running the application.\nApplication code: The executable code within the container.\nOptional \ufb01les included in both setups:\ngh repo clone runpod-workers/worker-template\n.\n\u251c\u2500\u2500 Dockerfile               # Docker configuration\n\u251c\u2500\u2500 README.md                # Project documentation\n\u251c\u2500\u2500 banana_config.json       # Configuration settings\n\u251c\u2500\u2500 requirements.txt         # Dependencies\n\u2514\u2500\u2500 src\n    \u251c\u2500\u2500 app.py               # Main application code\n    \u2514\u2500\u2500 download.py          # Download script\nAsk AI\nAsk AI\nrequirements.txt : Lists dependencies needed for the application.\nBanana Con\ufb01guration settings\nBanana con\ufb01guration settings are stored in a banana_config.json  \ufb01le.\nBanana uses a banana_config.json  \ufb01le which contains things like Idle Timeout, Inference\nTimeout, and Max Replicas.\nIdle Timeout\nRunPod allows you to set an Idle Timeout when creating the Endpoint. The default value is 5\nseconds.\nInference Timeout\nRunPod has a similar concept to Inference Timeout. For runs that are take less than 30 seconds\nto execute, you should use the run_sync  handler. For runs that take longer than 30 seconds to\nexecute, you should use the sync  handler.\nMax Replicas\nWhen creating a Worker in RunPod, you can set the max Workers that will scale up depending on\nthe amount of Worker sent to your Endpoint. For more informaiton, see Scale Type\nNOTE\nWhen creating a Worker, select the Flashboot option to optimize your startup time.\nEdit this page\nPrevious\n\u00ab Banana\nDocs\nOverview\nAsk AI\nAsk AI\nTutorials\nAI APIs\nCommunity\nDiscord\nContact us\nMore\nBlog\nGitHub\nCopyright \u00a9 2024 RunPod\nAsk AI\nAsk AI\n"
}