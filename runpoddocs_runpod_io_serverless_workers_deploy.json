{
    "content": "Serverless\nWorkers\nDeploy\nPackage and deploy an image\nOn this page\nPackage and deploy an image\nOnce you have a Handler Function, the next step will be to package it into a Docker image that\ncan be deployed as a scalable serverless worker. This is accomplished by de\ufb01ning a docker \ufb01le\nto import everything required to run your handler. Example docker \ufb01les are in the repos of our\nrunpod-workers.\nUnfamiliar with Docker? Check out their overview page or see out guide on Containers.\nDocker File\nLet's say we have a directory that looks like the following:\nYour docker\ufb01le would look something like this:\nproject_directory\n\u251c\u2500\u2500 dockerfile\n\u251c\u2500\u2500 src\n\u2502   \u2514\u2500\u2500 handler.py\n\u2514\u2500\u2500 builder\n    \u2514\u2500\u2500 requirements.txt\nfrom python:3.11.1-buster\nWORKDIR /\nCOPY builder/requirements.txt .\nRUN pip install -r requirements.txt\nADD handler.py .\nCMD [ \"python\", \"-u\", \"/handler.py\" ]\nAsk AI\nAsk AI\nRunPod\n\ud83d\udea7 If your handler requires external \ufb01les such as model weights, be sure to cache them into\nyour docker image. You are striving for a completly self contained worker that does not\nneed to download or fetch external \ufb01les to run.\nContinuous integrations\nIntegrate your Handler Functions through continuous integration.\nThe Test Runner GitHub Action is used to test and integrate your Handler Functions into your\napplications.\nNOTE\nRunning any Action that sends requests to RunPod occurs a cost.\nYou can add the following to your work\ufb02ow \ufb01le:\nIf test-filename  is omitted, the Test Runner Action attempts to look for a test \ufb01le at\n.github/tests.json .\nYou can \ufb01nd a working example in the Worker Template repository.\nOther considerations\nWhile we do not impose a limit on the docker image size your container registry might have, be\nsure to review any limitations they may have. Ideally, you want to keep your \ufb01nal docker image as\nsmall as possible and only container the absolute minimum to run your handler.\nWe also highly recommend the use of tags for docker images and not relying on the default\n:latest  tag label, this will make version tracking and releasing updates signi\ufb01cantly easier.\n- uses: actions/checkout@v3\n- name: Run Tests\n  uses: runpod/runpod-test-runner@v1\n  with:\n    image-tag: [tag of image to test]\n    runpod-api-key: [a valid Runpod API key]\n    test-filename: [path for a json file containing a list of tests, defau\n    request-timeout: [number of seconds to wait on each request before tim\nAsk AI\nAsk AI\nEdit this page\nPrevious\n\u00ab Deploy\nNext\nEndpoints \u00bb\nDocs\nOverview\nTutorials\nAI APIs\nCommunity\nDiscord\nContact us\nMore\nBlog\nGitHub\nCopyright \u00a9 2024 RunPod\nAsk AI\nAsk AI\n"
}