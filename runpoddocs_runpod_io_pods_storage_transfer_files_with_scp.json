{
    "content": "Transfer \ufb01les with SCP\nPrerequisites\nNOTE\nYour local machine must be running Linux or a WSL instance in order to use rsync.\n1. Make sure your Pod is con\ufb01gured to use real SSH. Refer to this guide for assistance.\n2. If you intend to use rsync, make sure it's installed on both your local machine and your Pod with apt install rsync .\nConvert web pages and HTML files to PDF in your applications with the Pdfcrowd HTML to PDF API\nPrinted with Pdfcrowd.com\n1. Note the public IP address and external port from the SSH over exposed TCP command (you'll need these for the\nSCP/rsync commands).\nConvert web pages and HTML files to PDF in your applications with the Pdfcrowd HTML to PDF API\nPrinted with Pdfcrowd.com\nTransferring with SCP\nThe general syntax for sending \ufb01les to a Pod with SCP is as follows (execute this on your local machine, and replace the x's\nwith your Pod's external TCP port and IP; for this example, they are 43201 and 194.26.196.6, respectively):\nNOTE\nIf your private key \ufb01le is in a location other than ~/.ssh/id_ed25519  or you're using the Windows Command Prompt,\nmake sure you update this path accordingly in your command.\nscp -P xxxxx -i ~/.ssh/id_ed25519 /local/file/path root@xxx.xxx.xxx.xxx:/destination/file/path\nConvert web pages and HTML files to PDF in your applications with the Pdfcrowd HTML to PDF API\nPrinted with Pdfcrowd.com\nIf you want to receive a \ufb01le from your Pod, switch the source and destination arguments:\nIf you need to transfer a directory, use the -r  \ufb02ag to recursively copy \ufb01les and subdirectories (this will follow any symbolic\nlinks encountered as well):\nTransferring with rsync\nThe general syntax for sending \ufb01les to a Pod with rsync is as follows (execute this on your local machine, and replace the x's\nwith your Pod's external TCP port and IP):\nSome helpful \ufb02ags include:\n-a / --archive  - archive mode (ensures that permissions, timestamps, and other attributes are preserved during the transfer;\nuse this when transferring directories or their contents)\nrsync -e \"ssh -p xxxxx\" /source/file/path root@xxx.xxx.xxx.xxx:/destination/file/path\nConvert web pages and HTML files to PDF in your applications with the Pdfcrowd HTML to PDF API\nPrinted with Pdfcrowd.com\n-d / --delete  - deletes \ufb01les in the destination directory that are not present in the source\n-p / --progress  - displays \ufb01le transfer progress\n-v / --verbose  - verbose output\n-z / --compress  - compresses data as it's being sent and uncompresses as it's received (heavier on your CPU, but easier on\nyour network connection)\nIf you want to receive a \ufb01le from your Pod, switch the source and destination arguments:\nTo transfer the contents of a directory (without transferring the directory itself), use a trailing slash in the \ufb01le path:\nConvert web pages and HTML files to PDF in your applications with the Pdfcrowd HTML to PDF API\nPrinted with Pdfcrowd.com\nWithout a trailing slash, the directory itself is transferred:\nConvert web pages and HTML files to PDF in your applications with the Pdfcrowd HTML to PDF API\nPrinted with Pdfcrowd.com\nAn advantage of rsync is that \ufb01les that already exist at the destination aren't transferred again if you attempt to copy them\ntwice (note the minimal data transfer after the second execution):\nEdit this page\nConvert web pages and HTML files to PDF in your applications with the Pdfcrowd HTML to PDF API\nPrinted with Pdfcrowd.com\n"
}